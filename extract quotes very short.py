import json; from fuzzywuzzy import fuzz; quotes_per_person = {} 
for i in json.loads(open('quotes.json', 'r').read())["messages"]: quotes_per_person.setdefault(([k for k in quotes_per_person if fuzz.ratio((i["content"].split("-")[-1].replace(",", "").replace("|", "").replace("2021", "").replace("_", "").replace("2022", "").replace("2023", "").replace("Mr", "").replace("Ms", "").replace(".", "").strip()).lower(), k.lower()) > 85][0] if len([k for k in quotes_per_person if fuzz.ratio((i["content"].split("-")[-1].replace(",", "").replace("|", "").replace("2021", "").replace("_", "").replace("2022", "").replace("2023", "").replace("Mr", "").replace("Ms", "").replace(".", "").strip()).lower(), k.lower()) > 85]) > 0 else (i["content"].split("-")[-1].replace(",", "").replace("|", "").replace("2021", "").replace("_", "").replace("2022", "").replace("2023", "").replace("Mr", "").replace("Ms", "").replace(".", "").strip())), []).append("-".join(i["content"].split("-")[0:-2]) if len(i["content"].split("-")) > 2 else i["content"].split("-")[0] + " " + " ".join([j["url"] for j in i["attachments"]]) if " ".join([j["url"] for j in i["attachments"]]) != "" else "-".join(i["content"].split("-")[0:-2]) if len(i["content"].split("-")) > 2 else i["content"].split("-")[0]) if (len(i["content"].split("-")) > 1) and (("\"" in i["content"]) or (("-" in i["content"]))) else None
with open('quotes_per_mention.txt', 'w', encoding="utf-8") as f: f.write("\n".join(["<====== "+name+" "+str(len(quotes_per_person[name]))+" ======>\n"+"\n".join(quotes_per_person[name])+"\n<============>\n\n" for name in sorted(quotes_per_person, key=lambda name: len(quotes_per_person[name]), reverse=True)]) + "\nUsed the Levenshtein algorithm to try group names, as well as splitting at a '-'\nBadly formatted quotes found in 'Unknown'\nLinks of a message are under the quote")